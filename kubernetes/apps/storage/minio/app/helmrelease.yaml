---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app minio
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  #dependsOn:
  #  - name: volsync
  #    namespace: volsync
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-07-13T01-46-15Z
            env:
              TZ: Europe/London
              MINIO_UPDATE: "off"
              #MINIO_PROMETHEUS_URL: https://prometheus.${SECRET_DOMAIN}
              #MINIO_PROMETHEUS_AUTH_TYPE: public
              #MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_SERVER_URL: https://s3.${SECRET_DOMAIN}
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
              MINIO_BROWSER_REDIRECT_URL: https://minio.${SECRET_DOMAIN}
            #envFrom:
            #  - secretRef:
            #      name: minio-secret
            args:
              - server
              - /data
              - --console-address
              - :9001
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 100Mi
                cpu: 100m
              limits:
                memory: 2G
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.1.0/24"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
          nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
        hosts:
          - host: &host minio.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &s3Host s3.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
        tls:
          - hosts:
              - *host
              - *s3Host
    persistence:
      config:
        type: nfs
        server: 10.0.10.18
        path: /mnt/mechonis/backup/minio
        globalMounts:
          - path: /data
