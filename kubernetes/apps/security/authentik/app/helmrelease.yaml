---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      chart: authentik
      version: 2024.6.0
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  dependsOn:
    - name: redis
      namespace: database
  values:
    global:
      image:
        repository: ghcr.io/goauthentik/server
        tag: 2024.6.0
      fullnameOverride: authentik
    authentik:
      log_level: info
      avatars: "initials"
      #email:
      #  host: "smtp-relay.default.svc.cluster.local"
      #  port: 587
      #  use_tls: false
      #  from: "no-reply@skylab.fi"
      secret_key: "${SECRET_AUTHENTIK_SECRET_KEY}"
      error_reporting:
        enable: false
        send_pii: false
        environment: "kryptonian"
      outposts:
        container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      postgresql:
        host: "postgres16-rw.databases.svc.cluster.local"
        name: "authentik"
        user: "authentik"
        password: "${SECRET_AUTHENTIK_POSTGRES_PASSWORD}"
      redis:
        host: "redis.database.svc.cluster.local"

    server:
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 3
      pdb:
        enabled: true
        minAvailable: 1
        maxUnavailable: 1
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - &host "auth.${SECRET_DOMAIN}"
        paths:
          - /
        tls: [hosts: [*host]]
        #tls:
        #  - hosts:
        #      - *host
        #    secretName: skylab.fi-tls
      metrics:
        serviceMonitor:
          enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          memory: 2Gi
    worker:
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 3
      resources:
        requests:
          cpu: 50m
          memory: 512Mi
        limits:
          memory: 1Gi
    prometheus:
      rules:
        enabled: true

    postgresql:
      enabled: false
    redis:
      enabled: false
